<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paketo Buildpacks | Blog</title>
    <link>https://blog.paketo.io/</link>
    <description>Recent content on Paketo Buildpacks | Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.paketo.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introducing a re-architected .NET Core Buildpack!</title>
      <link>https://blog.paketo.io/posts/dotnet-core-rearchitecture/</link>
      <pubDate>Tue, 09 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.paketo.io/posts/dotnet-core-rearchitecture/</guid>
      <description>On behalf of the Paketo contributors, I&amp;rsquo;m pleased to unveil the new and improved .NET Core Buildpack! With the release of Paketo .NET Core Buildpack 0.1.0, you‚Äôll enjoy a host of new features and improvements that will make containerizing your .NET apps a breeze. üçÉ
With the new buildpack, you can:
 Build .NET 5 apps Build your app from source code, from a framework-dependent deployment (FDD), from a framework-dependent executable (FDE), or from a self-contained deployment Build Visual Basic apps Have source code removed from final app image.</description>
    </item>
    
    <item>
      <title>2021 Paketo Buildpacks Roadmap</title>
      <link>https://blog.paketo.io/posts/2021-roadmap/</link>
      <pubDate>Fri, 29 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.paketo.io/posts/2021-roadmap/</guid>
      <description>We‚Äôre not even at the one year anniversary of the Paketo Buildpacks launch, but we‚Äôve already got so much to celebrate üéâ. 2020 was a busy year for the Paketo Buildpacks core development team. Looking back on the last year, a few highlights stand out:
 Establishing our project governance and RFC process Moving all project tooling to Github-based workflows Building out a foundational set of buildpacks for some of the most popular languages including Java, Node.</description>
    </item>
    
    <item>
      <title>Paketo Buildpacks Hot Topic at Cloud Foundry Summit</title>
      <link>https://blog.paketo.io/posts/paketo-buildpacks-hot-topic-at-cf-summit/</link>
      <pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.paketo.io/posts/paketo-buildpacks-hot-topic-at-cf-summit/</guid>
      <description>Paketo Buildpacks were a hot topic at the recently concluded Cloud Foundry Summit, the first virtual Summit run by the Cloud Foundry Foundation. The Summit featured project updates, particularly in the Kubernetes space, including a talk on Paketo Buildpacks. Dan Thornton, an engineer contributing to the Paketo Buildpacks project, maintained that they are the ideal tool for transforming app source code into container images.
So, we wanted to share Dan‚Äôs talk here and dive into a Q&amp;amp;A of all of the questions we didn‚Äôt get to answer during this session.</description>
    </item>
    
    <item>
      <title>Building apps for Kubernetes? Get to Know Paketo Buildpacks.</title>
      <link>https://blog.paketo.io/posts/get-to-know-paketo-buildpacks/</link>
      <pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.paketo.io/posts/get-to-know-paketo-buildpacks/</guid>
      <description>I‚Äôm excited to announce the launch of Paketo Buildpacks, a collection of Cloud Native Buildpacks for the most popular languages and frameworks. Paketo Buildpacks make it easy for you to build and patch containerized apps so that you can spend all your time on the thing that matters the most‚Ä¶ developing great software.
First off‚Ä¶ what are Paketo Buildpacks, and why would I use them?  Buildpacks provide a higher-level abstraction for building apps</description>
    </item>
    
  </channel>
</rss>
